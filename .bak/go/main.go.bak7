package main

import (
	// "golang.org/x/net/proxy"
	"io"
	"log"
	"net"
	"time"
)

func h(raddr string, c *net.TCPConn) {
	c.SetKeepAlive(true)
	c.SetKeepAlivePeriod(60 * time.Second)

	addr, err := net.ResolveTCPAddr("tcp4", raddr)

	if err != nil {
		log.Printf("Error : %v", err)
		return
	}

	s, err := net.DialTCP("tcp", nil, addr)

	if err != nil {
		log.Printf("Error : %v", err)
		return
	}

	s.SetKeepAlive(true)
	s.SetKeepAlivePeriod(60 * time.Second)

	go func() {
		io.Copy(c, s)

		s.Close()
		c.Close()
	}()

	func() {
		io.Copy(s, c)
		s.Close()
		c.Close()
	}()
}

func main() {
	addr, err := net.ResolveTCPAddr("tcp4", ":1234")

	if err != nil {
		log.Printf("Error : %v", err)
		return
	}

	l, err := net.ListenTCP("tcp", addr)

	if err != nil {
		panic(err)
	}

	defer l.Close()

	for {
		c, err := l.AcceptTCP()

		if err != nil {
			continue
		}

		log.Println("connection: ", c)

		go h("localhost:4321", c)
	}
}
